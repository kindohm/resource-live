
do
  let harmorChanPat = "0"
  d1
    $ shift
    $ every 1 (while "<1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0>" (const $ stack [
      (|+ midichan harmorChanPat) $ s "harmor" # midichan 0 # note "c3" # amp 0.1
      , (|+ midichan harmorChanPat) $ s "harmor" # midichan 1 # note "c3" # amp 0.1
      ,  midichan "<10 ~ ~ ~>" # note "c3" # amp 1 # s "rytm"
    ]))
    $ sometimesBy 0 (stutWith (choose [2,3,4,5]) "1s" id)
    $ shift
    $ every 2 ( while "1 <0 0 1> 0 0" $ const $ stack [
        s "rytm" # midichan 1 # note "c3" # amp 1
        , (|+ midichan harmorChanPat) $ s "harmor" # midichan 0 # note "c5" # amp 0.1
        , (|+ midichan harmorChanPat) $ slow 4 $ s "harmor" # midichan 1 # note "c5" # amp 1
      ])
    $ stack [
      stutWith 9 "3s" id $ (0.25 ~>) $ slow 2 $ s "rytm" # midichan 0 # note "c3" # amp 1
      , ("4s" <~) $ stutWith 9 "3s" id $ (0.25 ~>) $ slow 2 $ s "rytm" # midichan 8 # note "c3" # amp 1
      , ("1s" <~) $ stutWith 9 "3s" id $ (0.25 ~>) $ slow 2 $ s "rytm" # midichan 5 # note "c3" # amp 1
      , (|+ midichan harmorChanPat) $ stutWith 9 "3s" id $ (0.25 ~>) $ slow 2 $ s "harmor" # midichan 0 # note "c5" # amp 1
      , (|+ midichan harmorChanPat) $ stutWith 9 "3s" id $ (0.25 ~>) $ slow 2 $ s "harmor" # midichan 1 # note "c5" # amp 0.1
      , (0.5 ~>) $ s "rytm" # midichan 3 # note "c3" # amp 1
      , s "rytm" # midichan 7 # note "c3" # amp 1
    ] # cps (180/120/2)
  d2
    $ slow 2 $ s "rytm" # midichan 2 # note "c3" # amp 1


  d3 $ s "rytm" # midichan 7 # note "c3" # amp 1  


    hush

